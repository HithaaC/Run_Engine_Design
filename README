## Assignment 1: Rule Engine with AST
This project implements a 3-tier rule engine that uses an Abstract Syntax Tree (AST) for flexible and dynamic rule-based eligibility checking. The rule engine can create, combine, and evaluate complex rules based on user attributes like age, department, income, and experience.

## Features
Create Rules: Converts rule strings into ASTs.
Combine Rules: Combines multiple ASTs into a single rule using the AND operator.
Evaluate Rules: Checks if given user data meets specified rule conditions.
Error Handling: Handles invalid rules and missing data gracefully.

## Requirements
Python: 3.8 or above
Dependencies: Listed in requirements.txt

## Assignemnt Structure
zeotap/
├── app/
│   ├── services/
│   │   └── rule_service.py        # Core rule engine logic
│   └── tests/
│       └── test_rules.py          # Test cases for rule engine functionality
├── test_output.py                 # Sample script to demonstrate rule creation, combination, and evaluation
├── requirements.txt               # Project dependencies
└── README.md                      # Project documentation

## Setup and Installation
1. Clone the Repository:
        git clone <your-repository-url>
        cd zeotap

2. Set up a Virtual Environment (optional but recommended):

        python -m venv venv
        Activate it:
        On Windows:
        venv\Scripts\activate

3. Install Dependencies:

        pip install -r requirements.txt

4. To start the FastAPI server, use the following command:

        uvicorn app.main:app --reload    //run this in the vscode terminal

5. Set the python path: //run the below three commands in the project directory command prompt
        cd <Navigate to the Project Directory:> eg: cd C:\Users\Hitha\OneDrive\Documents\zeotap
        set PYTHONPATH=%CD%
        pytest app/tests/

6. Test the Application Code: 
        python test_output.py
